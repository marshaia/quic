
<% isOwner = isOwner?(@quiz.id, @current_author) %>

<div class="flex justify-center w-full">
  <main class="w-full "> <%!-- max-3-xl --%>
    <div class="flex justify-start mb-5">
      <.my_back navigate={~p"/quizzes"}>Back to quizzes</.my_back>
    </div>

    <%!-- QUIZ SPECS --%>
    <section class="w-full bg-[var(--background-card)] p-4 rounded-md border border-[var(--border)]">
      <div class="flex justify-end">
        <.link 
          :if={isOwner} 
          patch={~p"/quizzes/#{@quiz}/show/edit"} 
          phx-click={JS.push_focus()}
          class="border-[var(--primary-color-text)] text--[var(--primary-color-text)] hover:text--[var(--primary-color)] hover:border-[var(--primary-color)] border rounded-full p-1.5"
        >
          <Heroicons.pencil class="question-box-icon" />
        </.link>
      </div>
      

      <h4 class="text-center text-[var(--primary-color)]"> <%= @quiz.name %> </h4>
      <p class="mt-4 text-justify xl:text-center"><%= @quiz.description %></p>


      <div class="flex flex-col items-center justify-between gap-2 mt-8 sm:flex-row">
        <div class="flex gap-1">
          <Heroicons.list_bullet class="w-5 h-5" />
          <p><%= Enum.count(@quiz.questions) %> Questions</p>
        </div>

        <div class="flex gap-1">
          <Heroicons.trophy class="w-5 h-5" />
          <p><%= @quiz.total_points %> Points</p>
        </div>

        <div class="flex gap-1">
          <Heroicons.user_circle class="w-5 h-5" />
          <p>
            <%= if @quiz.author.id === @current_author.id do %>
              You
            <% else %>
              <%= @quiz.author.id %>
            <% end %> 
          </p>
        </div>
      </div>
    </section>


    <%!-- LAUNCH DIVIDER --%>
    <div class="flex flex-col items-center mb-7 mt-14">
      <hr />
      <.link :if={Enum.count(@quiz.questions) > 0} navigate={~p"/sessions/new/quiz/#{@quiz.id}"} class="flex items-center gap-2 -mt-5 text-white call2actionBtn">
        <Heroicons.bolt class="w-5 h-5" />
        Launch Quiz
      </.link>
    </div>



    <%!-- QUIZ QUESTIONS --%>
    <section id="quiz-page-questions-section-prism-hook" phx-hook="PrismInitializer" class="w-full">
      <h6 class="mb-2 font-bold">Questions</h6>
      <div 
        :for={question<- @quiz.questions}
        class="flex flex-col md:flex-row border border-[var(--border)] rounded-md bg-[var(--background-card)] py-2 px-4 min-h-32 mb-4"
      >
        <%!-- POSITION --%>
        <div class="flex items-center justify-between md:flex-col border-b border-[var(--border)] md:border-0">
          <h5 class="text-[var(--primary-color)]"><%= question.position %></h5>

          <.button
            disabled={question.position === 1}
            phx-click="send_question_up"
            phx-value-id={question.id}
          >
            <Heroicons.arrow_up :if={isOwner} class={["question-box-icon", (if question.position === 1, do: "text-[var(--border)] hover:text-[var(--border)]", else: "text-[var(--primary-color-text)]")]} />
          </.button>

          <.button
            disabled={question.position === Enum.count(@quiz.questions)}
            phx-click="send_question_down"
            phx-value-id={question.id}
          >
            <Heroicons.arrow_down :if={isOwner} class={["question-box-icon", (if question.position === Enum.count(@quiz.questions), do: "text-[var(--border)] hover:text-[var(--border)]", else: "text-[var(--primary-color-text)]")]} />
          </.button>

        </div>

        <%!-- QUESTION INFO --%>
        <.link 
          class="flex-1 mt-3 md:mt-0 md:px-4 mx-3 md:border-x border-[var(--border)] overflow-auto"
          phx-click="clicked_question"
          phx-value-id={question.id}
        >
          <div class="flex flex-col md:justify-between md:items-center md:flex-row">
            <%!-- <p class="font-bold"> <%= question.title %> </p> --%>

            <%!-- QUESTION TYPE --%>
            <div class={["rounded-md px-2 max-w-fit", QuicWebAux.get_type_color(question.type)]}>
              <span class="text-xs text-white"> <%= QuicWebAux.readable_name(question.type) %> </span>
            </div>

            <div class="hidden gap-1 md:flex">
              <Heroicons.trophy class="w-5 h-5" />
              <p><%= question.points %> Points</p>
            </div>
          </div>

          <%!-- QUESTION DESCRIPTION --%>
          <.markdown class="mt-2" text={question.description} />

          <hr :if={question.type !== :open_answer && question.type !== :fill_the_blanks} class="w-full my-4" />

          <%!-- QUESTION ANSWERS --%>
          <%= if question.type === :true_false do %>
            <div class="px-2">
              <% answer = Enum.at(question.answers, 0, %{}) %>
              <.true_or_false is_true={answer.is_correct} />
            </div>
          <% end %>
          <div :if={question.type !== :open_answer && question.type !== :true_false} class="grid w-full grid-cols-1 gap-2 overflow-auto lg:grid-cols-2" style="grid-auto-rows: 1fr">
            <div :for={{answer, index} <- Enum.with_index(question.answers)} class={["h-full p-1 px-5 lg:overflow-auto", (if index !== 0, do: "border-t border-[var(--border)] md:border-0"), (if index === 0 || index === 1, do: "md:border-b md:border-[var(--border)]")]}>
                <div class="flex items-center justify-start w-full h-full gap-2 lg:gap-3">
                  <.right_or_wrong is_correct={answer.is_correct} class="w-6 h-6 min-h-6 min-w-6" />
                  <%!-- <div class={["min-w-4 w-4 h-4 min-h-4 rounded-full", (if answer.is_correct, do: "bg-[var(--green)]", else: "bg-red-700")]} /> --%>
                  <div class="flex-1">
                    <.markdown class="w-full" text={answer.answer} />
                  </div>
                </div>
            </div>
          </div>
        </.link>


        <%!-- ACTIONS --%>
        <div :if={isOwner} class="flex md:flex-col mt-3 items-center justify-between border-t py-2 md:py-0 border-[var(--border)] md:border-0">
          <.link 
            phx-click="clicked_edit"
            phx-value-id={question.id}
          >
            <Heroicons.pencil class="question-box-icon" />
          </.link>
          
          <.link
            phx-click={JS.push("delete", value: %{id: question.id}) |> hide("##{question.id}")}
            data-confirm="Are you sure you want to delete this question?"
          >
            <Heroicons.trash class="question-box-icon" />
          </.link>
          
          <.link phx-click={JS.push("duplicate", value: %{id: question.id})}>
            <Heroicons.document_duplicate class="question-box-icon" />
          </.link>
          
        </div>
      </div>

      <div class="flex flex-wrap items-center justify-center">
        <.link patch={~p"/quizzes/#{@quiz.id}/new-question"} class="rounded-full call2actionBtn">
          <Heroicons.plus class="w-5 h-5 text-white" />
        </.link>

        <%!-- <.link patch={~p"/quizzes/#{@quiz.id}/question/new"} class="rounded-full call2actionBtn">
          <Heroicons.plus class="w-5 h-5 text-white" />
        </.link> --%>




        <%!-- <.link patch={~p"/quizzes/#{@quiz.id}/question/new"} class="rounded-full bg-[var(--turquoise)] px-2 py-1">
          <p class="text-white">Single Choice</p>
        </.link>

        <.link patch={~p"/quizzes/#{@quiz.id}/question/new"} class="rounded-full bg-[var(--second-color)] px-2 py-1">
          <p class="text-white">Multiple Choice</p>
        </.link>

        <.link patch={~p"/quizzes/#{@quiz.id}/question/new"} class="rounded-full bg-[var(--blue)] px-2 py-1">
          <p class="text-white">True or False</p>
        </.link>

        <.link patch={~p"/quizzes/#{@quiz.id}/question/new"} class="rounded-full bg-[var(--dark-green)] px-2 py-1">
          <p class="text-white">Open Answer</p>
        </.link>

        <.link patch={~p"/quizzes/#{@quiz.id}/question/new"} class="rounded-full bg-[var(--fifth-color)] px-2 py-1">
          <p class="text-white">Fill the Blanks</p>
        </.link>
        
        <.link patch={~p"/quizzes/#{@quiz.id}/question/new"} class="rounded-full bg-[var(--third-color)] px-2 py-1">
          <p class="text-white">Fill the Code</p>
        </.link>

        <.link patch={~p"/quizzes/#{@quiz.id}/question/new"} class="rounded-full bg-[var(--fourth-color)] px-2 py-1">
          <p class="text-white">Code</p>
        </.link> --%>



      </div>
    </section>
  </main>
</div>


<%!-- <.header>
  <h4 class="text-[var(--primary-color)]"><%= @quiz.name %></h4>
  <:subtitle>
    <p>This is a quiz record from your database.</p>
  </:subtitle>
  <:actions>
    <%= if isOwner?(@quiz.id, @current_author) do %>
    <.link patch={~p"/quizzes/#{@quiz}/show/edit"} phx-click={JS.push_focus()}>
      <.button class="call2actionBtn">Edit quiz</.button>
    </.link>
    <% end %>
  </:actions>
</.header>

<.list>
  <:item title="Name"><%= @quiz.name %></:item>
  <:item title="Description"><%= @quiz.description %></:item>
  <:item title="Total points"><%= @quiz.total_points %></:item>
  <:item title="Author"><%= @quiz.author.display_name %></:item>
</.list>



<h6 class="mt-5">Questions</h6>
<.link patch={~p"/quizzes/#{@quiz.id}/question/new"}>
  <.button class="call2actionBtn">New Question</.button>
</.link>
<div :for={question <- @quiz.questions} class="p-2 mt-4 bg-[var(--background-card)] rounded-md">
  <.link navigate={~p"/quizzes/#{@quiz.id}/question/#{question.id}"}>
      <%= question.title %> --- <% question.description %>

      <%= if isOwner?(@quiz.id, @current_author) do %>
      <.link
        phx-click={JS.push("delete", value: %{id: question.id}) |> hide("##{question.id}")}
        data-confirm="Are you sure you want to delete this question?"
        class="redLink"
      >
        Delete
      </.link>
      <% end %>
      
  </.link>
</div> --%>


<.modal :if={@live_action == :edit} id="quiz-modal" show on_cancel={JS.patch(~p"/quizzes/#{@quiz}")}>
  <.live_component
    module={QuicWeb.QuizLive.FormComponent}
    id={@quiz.id}
    title={@page_title}
    action={@live_action}
    current_author={@current_author}
    quiz={@quiz}
    patch={~p"/quizzes/#{@quiz}"}
  />
</.modal>

<.modal :if={@live_action == :new_question} id="quiz-new-question-modal" show on_cancel={JS.patch(~p"/quizzes/#{@quiz}")}>
  <.live_component
    module={QuicWeb.QuizLive.NewQuestionForm}
    id={@quiz.id}
    action={@live_action}
    current_author={@current_author}
    patch={~p"/quizzes/#{@quiz}"}
  />
</.modal>




