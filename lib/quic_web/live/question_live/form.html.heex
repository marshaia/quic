<div class="flex justify-start mb-5 lg:mb-3">
  <%= if String.contains?(@page_title, "New") do %>
    <.my_back navigate={~p"/quizzes/#{@quiz_id}"}>Back</.my_back>
  <% else %>
    <.my_back navigate={~p"/quizzes/#{@quiz_id}/question/#{@question.id}"}>Back</.my_back>
  <% end %> 
</div>


<%!-- LARGE SCREENS --%>
<div class="hidden lg:block">
  <div class="flex w-full mt-4 rounded-md border border-[var(--border)] h-[calc(100vh-11.5rem)] bg-[var(--background-card)]">
    <%!-- FORM --%>
    <section class="flex flex-col items-center w-1/2 px-6 py-3 overflow-auto">
      <p :if={@type === :open_answer} class="mt-2 mb-8 text-xs text-justify">
        <span class="font-semibold">NOTE:</span> Open Answers aren't automatically evaluated by the system. So, the points are only assigned if the Participant submits an answer.
      </p>

      <% new_question_code = (@type === :fill_the_code || @type === :code) && assigns[:question] === nil%>
      <div :if={new_question_code} class="flex justify-end w-full gap-1 p-2 -mt-2 -mb-4">
        <Heroicons.trash class="w-3.5 h-3.5 text-gray-400" />
        <button phx-click="clear"> 
          <p class="text-xs text-gray-400 hover:underline">Clear All</p>
        </button>
      </div>

      <.simple_form
        class={["w-full", (if @type !== :fill_the_code && @type !== :code, do: "-mt-10"), (if !new_question_code, do: "-mt-10")]}
        :if={@view_selected === :editor}
        :let={f}
        for={@question_changeset}
        id="question-form"
        phx-change="validateQuestion"
        phx-submit="ignore"
      >
        <.input field={f[:points]} type="number" label="Points" />
        <.input field={f[:description]} type="textarea" rows={if @type === :fill_the_code || @type === :code, do: "4", else: "10"} label="Question Description (Markdown)" />
      </.simple_form>

      <div :if={@type === :fill_the_code || @type === :code} class="w-full">         
        <.live_component id="code-form-question" module={QuicWeb.QuestionLive.FormFillCodeAndCode} type={@type} loading={@loading} parameters={@parameters_changeset} is_answer={false} id_editor="question-fill-code-form" />
      </div>
        
      <%!-- ANSWERS FORM --%>
      <%= if @type === :true_false do %>
        <.live_component id="true-false-answer-form" module={QuicWeb.QuestionLive.FormTrueFalse} answers={@answers} responsive={false} />
      <% else %>
        <%= if @type === :single_choice || @type === :multiple_choice do %>
          <h6 class="mt-8 font-bold text-[var(--primary-color-text)] text-center">
            Answers <span class="text-sm font-normal">(Markdown)</span>
          </h6>
          <.error :if={@error_answers !== nil}><%= @error_answers %></.error>
          <.live_component id="single-choice-answer-form" module={QuicWeb.QuestionLive.FormSingleMultipleChoice} type={@type} answers={@answers} responsive={false} />
        <% else %>
          <%= if @type === :fill_the_blanks do %>
            <h6 class="mt-8 font-bold text-[var(--primary-color-text)] text-center">Answer</h6>
            <p class="mb-2 text-xs text-justify">* The evaluation of answers will be done using case insensitive Regular Expressions (Regex). Be careful of the caracters introduced.</p>
            <.live_component id="fill-the-blanks-answer-form" module={QuicWeb.QuestionLive.FormFillBlanks} answers={@answers} responsive={false} />
          <% end %>
        <% end %>
      <% end %>
    </section>

    <%!-- DIVIDER --%>
    <div class="border-l border-[var(--border)]"></div>

    <%!-- PREVIEWER --%>
    <section id="answer-form-page-prism-hook" phx-hook="PrismInitializer" class="w-1/2 px-6 overflow-auto">
      <h6 class="my-2 text-center">Previewer</h6>
      <hr class="w-full"/>
      <.markdown_previewer_question class="-mt-3" question_changeset={@question_changeset} parameters_changeset={@parameters_changeset} type={@type} answers={@answers} />
    </section>
  </div>
</div>



<%!-- SMALL-MEDIUM SCREENS --%>
<div class="block w-full lg:hidden">
  <div class="flex w-full">
    <.link
      class={["w-1/2 text-center py-2 px-4 border border-[var(--border)] hover:bg-[var(--hover)] rounded-l-md",
      (if @view_selected === :editor, do: "bg-[var(--background-card)] border-[var(--primary-color)] text-[var(--primary-color)]", else: "bg-[var(--background-view)]")]}
      phx-click="clicked_view"
      phx-value-view={:editor}
    >
      Editor
    </.link>
    
    <.link
      class={["w-1/2 text-center bg-[var(--background-card)] py-2 px-4 border border-[var(--border)] hover:bg-[var(--hover)] rounded-r-md",
      (if @view_selected === :previewer, do: "bg-[var(--background-card)] border-[var(--primary-color)] text-[var(--primary-color)]", else: "bg-[var(--background-view)]")]}
      phx-click="clicked_view"
      phx-value-view={:previewer}
    >
      Previewer
    </.link>  
  </div>

  <p :if={@type === :open_answer && @view_selected === :editor} class="mt-10 -mb-5 text-xs text-justify">
    <span class="font-semibold">NOTE:</span> Open Answers aren't automatically evaluated by the system. So, the points are only assigned if the Participant submits an answer.
  </p>

  <%!-- QUESTION FORM --%>
  <%= if @view_selected === :editor do %>
    <div :if={new_question_code} class="flex justify-end w-full gap-1 mt-5 -mb-4">
      <Heroicons.trash class="w-3.5 h-3.5 text-gray-400" />
      <button phx-click="clear"> 
        <p class="text-xs text-gray-400 hover:underline">Clear All</p>
      </button>
    </div>

    <.simple_form
      :if={@view_selected === :editor}
      :let={f}
      for={@question_changeset}
      id="question-form-responsive"
      phx-change="validateQuestion"
      phx-submit="ignore"
      class="-mt-5"
    >
      <.input field={f[:points]} type="number" label="Points" />
      <.input field={f[:description]} type="textarea" rows={if @type === :fill_the_code || @type === :code, do: "3", else: "8"} label="Question Description" />
    </.simple_form>

    <%= if @type === :fill_the_code || @type === :code do %>      
      <.live_component id="code-form-question-responsive" module={QuicWeb.QuestionLive.FormFillCodeAndCode} type={@type} loading={@loading} parameters={@parameters_changeset} is_answer={false} id_editor="question-fill-code-form-responsive" />
    <% end %>


    <%!-- ANSWERS FORM --%>
    <%= if @type === :true_false do %>
      <.live_component id="true-false-answer-form-responsive" module={QuicWeb.QuestionLive.FormTrueFalse} answers={@answers} responsive={true} />
    <% else %>
      <%= if @type === :single_choice || @type === :multiple_choice do %>
        <h6 class="mt-8 font-bold text-[var(--primary-color-text)] text-center">
          Answers <span class="text-sm font-normal">(Markdown)</span>
        </h6>
        <.error :if={@error_answers !== nil}><%= @error_answers %></.error>
        <.live_component id="single-choice-answer-form-responsive" module={QuicWeb.QuestionLive.FormSingleMultipleChoice} type={@type} answers={@answers} responsive={true} />
      <% else %>
        <%= if @type === :fill_the_blanks do %>
          <h6 class="mt-8 font-bold text-[var(--primary-color-text)] text-center">Answer</h6>
          <p class="mb-2 text-xs text-justify">* The evaluation of answers will be done using case insensitive Regular Expressions (Regex). Be careful of the caracters introduced.</p>
          <.live_component id="ill-the-blanks-answer-form-responsive" module={QuicWeb.QuestionLive.FormFillBlanks} answers={@answers} responsive={false} />
        <% end %>
      <% end %>
    <% end %>
  <% end %>

  <%!-- MARKDOWN PREVIEWERS --%>
  <section :if={@view_selected === :previewer} id="answer-form-page-prism-hook-responsive" phx-hook="PrismInitializer" class="mt-3 w-full bg-[var(--background-card)] rounded-md px-4 border border-[var(--border)]">
     <.markdown_previewer_question question_changeset={@question_changeset} parameters_changeset={@parameters_changeset} type={@type} answers={@answers} />
  </section>
</div>


<%!-- SAVE BUTTON --%>
<div class="flex justify-center mt-5 mb-0 lg:mt-3">
  <.button class="call2actionBtn" phx-click="saveQuestion" disabled={@cant_submit_question || @cant_submit_answers}>
    <p class="font-normal text-white">Save Question</p>
  </.button>
</div>