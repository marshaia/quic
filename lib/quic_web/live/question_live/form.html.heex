          
<div class="flex justify-start mb-8 -mt-5 lg:mb-0">
  <%= if String.contains?(@page_title, "New") do %>
    <.my_back navigate={~p"/quizzes/#{@quiz_id}"}>Back</.my_back>
  <% else %>
    <.my_back navigate={~p"/quizzes/#{@quiz_id}/question/#{@question.id}"}>Back</.my_back>
  <% end %> 
</div>



<%!-- LARGE SCREENS --%>
<div class="hidden lg:block">
  <%!-- <.header>
    <h5 class="text-[var(--primary-color)] lg:text-center lg:-mt-3 mb-8 md:mb-3">Question Editor</h5>
  </.header> --%>

  <div class="flex w-full mt-4 rounded-md border border-[var(--border)] h-[calc(100vh-12.5rem)] bg-[var(--background-card)]">
    <%!-- FORM --%>
    <section class="flex flex-col items-center w-1/2 px-6 py-5 overflow-auto">
      <p :if={@type === :open_answer} class="mt-3 mb-5 text-xs text-justify">
        <span class="font-semibold">NOTE:</span> Open Answers don't have points associated, since they can't be automatically evaluated by the system.
      </p>

      <.simple_form
        class="w-full -mt-10"
        :if={@view_selected === :editor}
        :let={f}
        for={@question_changeset}
        id="question-form"
        phx-change="validateQuestion"
        phx-submit="ignore"
      >
        <%= if @type !== :open_answer do %>
          <.input field={f[:points]} type="number" label="Points" />
        <% end %>
        <.input field={f[:description]} type="textarea" rows="10" label="Question Description (Markdown)" />
      </.simple_form>

      <%!-- ANSWERS FORM --%>
      <%= if @type === :true_false do %>
        <.live_component id="true-false-answer-form" module={QuicWeb.QuestionLive.FormTrueFalse} answers={@answers} responsive={false} />
      <% end %>

      <%= if @type === :single_choice || @type === :multiple_choice do %>
        <h6 class="mt-8 font-bold text-[var(--primary-color-text)] text-center">
          Answers <span class="text-sm font-normal">(Markdown)</span>
        </h6>
        <.error :if={@error_answers !== nil}><%= @error_answers %></.error>
        <.live_component id="single-choice-answer-form" module={QuicWeb.QuestionLive.FormSingleMultipleChoice} type={@type} answers={@answers} responsive={false} />
      <% else %>
        <h6 class="mt-8 font-bold text-[var(--primary-color-text)] text-center">Answer</h6>
        <%= if @type === :fill_the_blanks do %>
          <p class="mb-2 text-xs text-justify">* The evaluation of answers will be done using case insensitive Regular Expressions (Regex). Be careful of the caracters introduced.</p>
          <.live_component id="fill-the-blanks-answer-form" module={QuicWeb.QuestionLive.FormFillBlanks} answers={@answers} responsive={false} />

        <% else %>
          <%= if @type === :code || @type === :fill_the_code do %>
            <div :if={@loading} id="question-form-editor-loading">
              <div class="flex items-center justify-center gap-3">
                <Heroicons.arrow_path class="w-5 h-5 text-[var(--primary-color)] animate-spin"/>
                <p>Loading editor</p>
              </div>
            </div>
            
            <.live_component id="code-form" module={QuicWeb.QuestionLive.FormCode} answers={@answers} id_editor="question-form-editor" />
          <% end %>
        <% end %>
      <% end %>
    </section>

    <%!-- DIVIDER --%>
    <div class="border-l border-[var(--border)]"></div>

    <%!-- PREVIEWER --%>
    <section id="answer-form-page-prism-hook" phx-hook="PrismInitializer" class="w-1/2 px-6 overflow-auto">
      <h6 class="my-2 text-center">Previewer</h6>
      <hr class="w-full"/>
      <.markdown_previewer_question class="-mt-3" question_changeset={@question_changeset} type={@type} answers={@answers} />
    </section>
  </div>
</div>



<%!-- SMALL-MEDIUM SCREENS --%>
<div class="block w-full lg:hidden">
  <div class="flex w-full">
    <.link
      class={["w-1/2 text-center py-2 px-4 border border-[var(--border)] hover:bg-[var(--hover)] rounded-l-md",
      (if @view_selected === :editor, do: "bg-[var(--background-card)] border-[var(--primary-color)] text-[var(--primary-color)]", else: "bg-[var(--background-view)]")]}
      phx-click="clicked_view"
      phx-value-view={:editor}
    >
      Editor
    </.link>
    
    <.link
      class={["w-1/2 text-center bg-[var(--background-card)] py-2 px-4 border border-[var(--border)] hover:bg-[var(--hover)] rounded-r-md",
      (if @view_selected === :previewer, do: "bg-[var(--background-card)] border-[var(--primary-color)] text-[var(--primary-color)]", else: "bg-[var(--background-view)]")]}
      phx-click="clicked_view"
      phx-value-view={:previewer}
    >
      Previewer
    </.link>  
  </div>

  <%!-- QUESTION FORM --%>
  <%= if @view_selected === :editor do %>
    <.simple_form
      :if={@view_selected === :editor}
      :let={f}
      for={@question_changeset}
      id="question-form-responsive"
      phx-change="validateQuestion"
      phx-submit="ignore"
    >
      <%= if @type !== :open_answer do %>
        <.input field={f[:points]} type="number" label="Points" />
      <% end %>
      <.input field={f[:description]} type="textarea" rows="8" label="Question Description" />
    </.simple_form>

    <%!-- ANSWERS FORM --%>
    <%= if @type === :true_false do %>
      <.live_component id="true-false-answer-form-responsive" module={QuicWeb.QuestionLive.FormTrueFalse} answers={@answers} responsive={true} />
    <% end %>

    <%= if @type === :single_choice || @type === :multiple_choice do %>
      <h6 class="mt-8 font-bold text-[var(--primary-color-text)] text-center">
        Answers <span class="text-sm font-normal">(Markdown)</span>
      </h6>
      <.error :if={@error_answers !== nil}><%= @error_answers %></.error>
      <.live_component id="single-choice-answer-form-responsive" module={QuicWeb.QuestionLive.FormSingleMultipleChoice} type={@type} answers={@answers} responsive={false} />
    <% else %>
      <%= if @type === :fill_the_blanks do %>
        <h6 class="mt-8 font-bold text-[var(--primary-color-text)] text-center">Answer</h6>
        <p class="mb-2 text-xs text-justify">* The evaluation of answers will be done using case insensitive Regular Expressions (Regex). Be careful of the caracters introduced.</p>
        <.live_component id="ill-the-blanks-answer-form-responsive" module={QuicWeb.QuestionLive.FormFillBlanks} answers={@answers} responsive={false} />
      <% else %>
        <%= if @type === :code || @type === :fill_the_code do %>
          <div :if={@loading} id="question-form-editor-responsive-loading">
            <div class="flex items-center justify-center gap-3">
              <Heroicons.arrow_path class="w-5 h-5 text-[var(--primary-color)] animate-spin"/>
              <p>Loading editor</p>
            </div>
          </div>
          
          <.live_component id="code-form-responsive" module={QuicWeb.QuestionLive.FormCode} answers={@answers} id_editor="question-form-editor-responsive" />
        <% end %>
      <% end %>
    <% end %>
  <% end %>

  <%!-- MARKDOWN PREVIEWERS --%>
  <section :if={@view_selected === :previewer} id="answer-form-page-prism-hook-responsive" phx-hook="PrismInitializer" class="mt-3 w-full bg-[var(--background-card)] rounded-md px-4 border border-[var(--border)]">
     <.markdown_previewer_question question_changeset={@question_changeset} type={@type} answers={@answers} />
  </section>
</div>


<%!-- SAVE BUTTON --%>
<div class="flex justify-center mt-5 mb-0 lg:mt-3">
  <.button class="call2actionBtn" phx-click="saveQuestion" disabled={@cant_submit_question || @cant_submit_answers}>
    <p class="font-normal text-white">Save Question</p>
  </.button>
</div>