<div class="flex justify-center w-full">
  <main class="w-full">
    <div class="flex justify-start">
      <.my_back navigate={~p"/quizzes/#{@quiz_id}"}>Back</.my_back>
    </div>

    <%!-- QUESTION SPECS --%>
    <section class="p-4 mt-5 rounded-md bg-[var(--background-card)] border border-[var(--border)]">
      <div class="flex items-center justify-between">
        <div class={["rounded-md px-2", QuicWebAux.get_type_color(@question.type)]}>
          <span class="text-xs text-white"> <%= QuicWebAux.readable_name(@question.type) %> </span>
        </div>

        <div class="flex gap-1">
          <Heroicons.trophy class="w-5 h-5" />
          <p><%= @question.points %> Points</p>
        </div>

        <div :if={@isOwner} class="flex justify-end">
          <.link 
            phx-click="clicked_edit"
            class="text--[var(--primary-color-text)] hover:text--[var(--primary-color)]"
          >
            <Heroicons.pencil class="question-box-icon" />
          </.link>
        </div>
      </div>

      <p id="question-page-prism-hook" phx-hook="PrismInitializer" class="mt-4 overflow-auto text-justify"><.markdown text={@question.description} /></p>

      <div :if={@question.type === :fill_the_code || @question.type === :code} class="mt-2">
        <.language_previewer text={@question.parameters.code} language={Atom.to_string(@question.parameters.language)} />
      </div>

      <%= if @question.type === :true_false do %>
        <hr class="mt-8" />
        <.true_or_false class="mt-3 ml-2" is_true={Enum.at(@question.answers, 0, %{}).is_correct}
        />
      <% end %>


      <%!-- QUIZ ANSWERS --%>
      <%= if @question.type === :fill_the_code || @question.type === :code do %>
        <section id={"question-page-answer-hook"} phx-hook="PrismInitializer" class="w-full mt-8">
          <hr class="w-full mt-10 mb-5" />

          <%= if @question.type === :fill_the_code do %>
            <h6 class="mb-2 font-medium">Correct Answer</h6>
              <% code = (if @question.type === :fill_the_code, do: Parameters.put_correct_answers_in_code(@question.parameters), else: @question.parameters.code) %>
              <.language_previewer text={code} language={Atom.to_string(@question.parameters.language)} class="mb-5" />
          <% end %>

          <%!-- TEST FILE --%>
          <h6 class="mb-2 font-medium">Test File</h6>
          <.language_previewer text={@question.parameters.test_file} language={Atom.to_string(@question.parameters.language)} class="mb-5" />

          <%!-- TESTS --%>
          <h6 class="mb-2 font-medium">Tests</h6>
          <div class="flex px-3 py-2 overflow-auto rounded-md">
            <table class="w-full p-2 overflow-auto">
              <tr class="border-b border-t border-[var(--border)] h-10">
                <th class="w-1/2 min-w-max">Input</th>
                <th class="min-w-8"></th>
                <th class="w-1/2 min-w-max">Output</th>
              </tr>

              <tr :for={test <- @question.parameters.tests} class="h-10 text-center">
                <td><p><%= if test["input"], do: test["input"], else: "Empty" %></p></td>
                <td class="flex items-center justify-center mt-2"><Heroicons.arrow_right_circle class="w-5 h-5 stroke-1" /></td>
                <td><p><%= if test["output"], do: test["output"], else: "Empty" %></p></td>
              </tr>
            </table>
          </div>
        </section>
      <% end %>
    </section>


    <%= if @question.type === :single_choice || @question.type === :multiple_choice || @question.type === :fill_the_blanks do %>
      <h6 class="mt-8 mb-2 font-medium">Answers</h6>
        <div 
          :for={answer <- @question.answers}
          id={"question-page-answer-#{answer.id}-hook"}
          phx-hook="PrismInitializer"
          class="flex rounded-md bg-[var(--background-card)] py-2 px-3 min-h-12 mb-4 border border-[var(--border)]"
        >
          <%!-- ANSWER VALIDITY --%>
          <div class="flex flex-col items-center justify-center">
            <.right_or_wrong is_correct={answer.is_correct} class="w-6 h-6 min-h-6 min-w-6" />
          </div> 

          <%!-- ANSWER INFO --%>
          <div class="flex-1 ml-3 border-l border-[var(--border)] overflow-auto">
            <div class="flex items-center h-full px-2 mx-3">
              <.markdown text={answer.answer} class="w-full"/>
            </div>
          </div>
        </div>
    <% end %>
  </main>
</div>