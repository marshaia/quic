
<div class="flex justify-start">
  <.my_back navigate={~p"/sessions/#{@session_id}"}>Back to session</.my_back>
</div>


<div class="flex justify-center w-full px-2 mt-5">
  <main class="w-full "> <%!-- max-3-xl --%>

    <%!-- QUIZ SPECS --%>
    <section class="px-3 md:px-10">
      <div class="bg-[var(--background-card)] px-5 py-5 rounded-md border border-[var(--border)]">
        <h5 class="text-center text-gradient"><%= @quiz.name %></h5>
        <p class="mt-4 text-justify "><%= @quiz.description %></p>

        <div class="flex flex-col items-center justify-between gap-2 mt-8 sm:flex-row">
          <div class="flex gap-1">
            <Heroicons.list_bullet class="w-5 h-5 text-gray-500 stroke-1 dark:text-gray-400" />
            <p class="text-gray-400"><%= Enum.count(@quiz.questions) %> Questions</p>
          </div>

          <div class="flex gap-1">
            <Heroicons.trophy class="w-5 h-5 text-gray-500 stroke-1 dark:text-gray-400" />
            <p class="text-gray-400"><%= @quiz.total_points %> Points</p>
          </div>

          <div class="flex gap-1">
            <Heroicons.user_circle class="w-5 h-5 text-gray-500 stroke-1 dark:text-gray-400" />
            <p class="text-gray-400"><%= @quiz.author_name %></p>
          </div>
        </div>
      </div>
    </section>



    <%!-- QUIZ QUESTIONS --%>
    <section id="quiz-page-questions-section-prism-hook" phx-hook="PrismInitializer" class="w-full mt-10">
      <h6 class="mb-2 font-medium">Questions</h6>
      <div 
        :for={question<- @quiz.questions}
        class="flex flex-col border border-[var(--border)] rounded-md bg-[var(--background-card)] py-2 px-4 mb-4"
      >
        <div class="flex">
          <%!-- POSITION --%>
          <h6 class="flex items-center justify-center min-h-8 min-w-8 h-8 w-8 border border-[var(--primary-color)] rounded-full text-[var(--primary-color-text)] text-xl"><%= question.position %></h6>

          <div class="flex-1 mx-3 overflow-auto">
            <div class="flex flex-col md:justify-between md:items-center md:flex-row">
              <%!-- QUESTION TYPE --%>
              <div class={["rounded-md px-2 max-w-fit", QuicWeb.QuicWebAux.get_type_color(question.type)]}>
                <span class="text-xs text-white"> <%= QuicWeb.QuicWebAux.readable_name(question.type) %> </span>
              </div>

              <div class="hidden gap-1 md:flex">
                <Heroicons.trophy class="w-5 h-5 stroke-1" />
                <p><%= question.points %></p>
              </div>
            </div>

            <%!-- QUESTION DESCRIPTION --%>
            <.markdown class="mt-2" text={question.description} />

            <%= if question.type === :fill_the_code || question.type === :code do %>
              <% parameters = Enum.find(@quiz.parameters, %{}, fn p -> p.question_id === question.id end) %>
              <.language_previewer text={parameters.code} language={parameters.language} />
            <% end %>
          </div>
        </div>


        <%!-- DIVIDER --%>
        <hr :if={question.type !== :open_answer && question.type !== :code} class="w-full my-4" />


        <%!-- QUESTION ANSWERS --%>
        <%= if question.type === :true_false do %>
          <div class="px-2">
            <% answer = Enum.find(@quiz.answers, %{}, fn a -> a.question_id === question.id end) %>
            <.true_or_false is_true={answer.is_correct} />
          </div>
        
        <% else %>
          <%= if question.type === :fill_the_blanks || question.type === :fill_the_code do %>
            <% answer = Enum.find(@quiz.answers, %{}, fn a -> a.question_id === question.id end) %>
            <div class="flex items-center justify-start w-full gap-2">
              <.right_or_wrong is_correct={true} class="w-6 h-6 min-h-6 min-w-6" />
              <%!-- <Heroicons.check class="w-4 h-4 text-[var(--primary-color-text)] min-h-4 min-w-4" /> --%>
              <div class="flex-1">
                <%= if question.type === :fill_the_blanks do %>
                  <.markdown class="w-full" text={answer.answer} />
                <% else %>
                  <% parameters = Enum.find(@quiz.parameters, %{}, fn p -> p.question_id === question.id end) %>
                  <.language_previewer text={Quic.Parameters.put_correct_answers_in_code(parameters)} language={parameters.language} />
                <% end %>
              </div>
            </div>
          <% end %>
        <% end %>

        <div :if={question.type === :single_choice || question.type === :multiple_choice} class="grid w-full grid-cols-1 gap-2 px-3 overflow-auto lg:grid-cols-2" >
          <% answers = Enum.filter(@quiz.answers, fn a -> a.question_id === question.id end) %>
          <div :for={{answer, index} <- Enum.with_index(answers)} 
            class={["h-full p-1 pb-2 px-5 overflow-auto", 
              (if index + 1 !== Enum.count(answers), do: "border-b border-[var(--border)] lg:border-0"), 
              (if index === 0 || index === 1, do: "lg:border-b lg:border-[var(--border)]")
          ]}>
            <div class="flex items-center justify-start w-full h-full gap-2 lg:gap-3">
              <%= if answer.is_correct do %>
                <.right_or_wrong is_correct={true} class="w-6 h-6 min-h-6 min-w-6" />
              <% else %>
                <.blank_square class="w-6 h-6 min-h-6 min-w-6" />
              <% end %>

              <div class="flex-1">
                <.markdown class="w-full" text={answer.answer} />
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>
  </main>
</div>
